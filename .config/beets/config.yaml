# Global Options ##################################################################################

include:
  - local.yaml # Edit paths to your needs.
  - plugins.yaml # Edit plugins to your needs.
  - secrets.yaml # Secret strings (REDUCTED) like usernames and passwords. Add this file to git.ignore.

original_date: yes # Use the original date for the release.
per_disc_numbering: yes # The track numbers are incremented throughout a multi disk release.
threaded: yes # Indicating whether the autotagger should use multiple threads.

###################################################################################################

# Paths ###########################################################################################

asciify_path: yes # Convert non-ASCII characters to ASCII.
clutter: # Files to ignore.
  [
    .DS_Store, # Mac OS X Finder metadata file.
    Thumbs.db, # Windows thumbnail cache file.
  ]
# replace: # Replace characters in paths.
#   - '[\x00-\x1f]': "" # Remove control characters.
#   - '[<>:"\?\*\|]': "" # Remove Windows reserved characters.
#   - '[\x7f-\x9f]': "" # Remove control characters.
#   - '[\x80-\x9f]': "" # Remove control characters.
#   - '[\x01-\x1f]': "" # Remove control characters.
#   - '[\x7f-\xff]': "" # Remove control characters.
#   - '[\x00-\x1f]': "" # Remove control characters.
paths: # Directory and naming scheme.
  default: $albumartist/$album%aunique{}/$track $title # The aunique{} function ensures that identically-named albums are placed in different directories.
  singleton: $artist/Non-Album/$title
  max_filename_length: "255" # Maximum length of a filename.
###################################################################################################

# Import ##########################################################################################

import: # Beets can move or copy files but it doesn’t make sense to do both).
  write: no # Controlling whether metadata (e.g., ID3) tags are written to files when using beet import.
  copy: no # Keep your current directory structure. The option is ignored if move is enabled (i.e., beets can move or copy files but it doesn’t make sense to do both).
  move: no # Move the files. Otherwise there will be duplicates.
  ask: no # Ask for confirmation before moving or copying files.
  resume: yes #  Controls whether interrupted imports should be resumed.

  incremental: no # Don't record imported directories.
  incremental_skip_later: no # Controlling whether imported directories are recorded and whether these recorded directories are skipped.
  from_scratch: no # Controlling whether existing metadata is discarded when a match is applied.
  # quiet_fallback: skip # Either skip (default) or asis, specifying what should happen in quiet mode when there is no strong recommendation.
  none_rec_action: # Specifies what should happen during an interactive import session when there is no recommendation.
    ask
  timid: yes # Controlling whether the importer runs in timid mode,
  #log: /mnt/internal/music/import.log
  languages: en es # Prefer transliterated English names.
  detail: # Whether the importer UI should show detailed information about each match it finds. When enabled, this mode prints out the title of every track, regardless of whether it matches the original metadata.
    no
  group_albums: # By default, the beets importer groups tracks into albums based on the directories they reside in. This option instead uses files’ metadata to partition albums.
    no
  autotag: yes # If most of your collection consists of obscure music, you might want to disable autotagging.
  duplicate_action: ask # Either skip, keep, remove, merge or ask. Controls how duplicates are treated in import task.
  bell: yes # Ring the terminal bell to get your attention when the importer needs your input.

###################################################################################################

# MusicBrainz #####################################################################################

musicbrainz:
  user: ansango
  pass: 721989Ansan&&
  searchlimit: 20 # Recommendation from: https://github.com/kernitus/beets-oldestdate
  extra_tags: # Enable improved MediaBrainz queries from tags.
    [catalognum, country, label, media, year]

match:
  preferred:
    media: ["Digital Media|File", "Digital Media"] # Priorize digital media.
    countries: ["ES", "XW", "US", "GB|UK"] # ES: Spain, XW: Worldwide, US: United States, GB|UK: United Kingdom.

  strong_rec_thresh:
    0.75 # Reflects the distance threshold below which beets will make a “strong recommendation” that the metadata be used.
    # Strong recommendations are accepted automatically (except in “timid” mode),
    # so you can use this to make beets ask your opinion more or less often.
    # The threshold is a distance value between 0.0 and 1.0, so you can think of it as the opposite of a similarity value.
    # For example, if you want to automatically accept any matches above 90% similarity, use: "strong_rec_thresh: 0.10"
    # The default strong recommendation threshold is 0.04.
    # When a match is below the medium recommendation threshold
    # or the distance between it and the next-best match is above the gap threshold,
    # the importer will suggest that match but not automatically confirm it.
    # Otherwise, you’ll see a list of options to choose from.

  medium_rec_thresh: 0.125 # The medium_rec_thresh and rec_gap_thresh options work similarly.

mbcollection:
  auto: yes # Automatically amend your MusicBrainz collection whenever you import a new album.
  collection: ac5be83d-7fb2-45f3-8589-dad1b5cdcb12 # Which MusicBrainz collection to update. Use the ID from the URL instead of the name.

###################################################################################################

# Bandcamp ########################################################################################

# beetcamp
bandcamp: # Beetcamp. Uses the bandcamp URL as id (for both albums and songs).
  # If no matching release is found when importing you can select enter Id and paste the bandcamp URL.

  preferred_media: Digital # A comma-separated list of media to prioritise when fetching albums.

  include_digital_only_tracks:
    true
    # For media that isn't Digital Media, include all tracks,
    # even if their titles contain digital only (or alike).

  search_max: 10 # Maximum number of items to fetch through search queries. Default: 10.

  art:
    true # Add a source to the FetchArt plug-in to download album art for Bandcamp albums
    # (requires FetchArt plug-in enabled).

  #exclude_extra_fields:   # The data that is added after the core auto tagging process is considered extra:
  #- lyrics              # (currently) lyrics and comments (release description) fields.
  #- comments            # Since there yet isn't an easy way to preview them before they get applied,
  # you can ignore them if you find them irrelevant or inaccurate.
###################################################################################################

# Last.fm #########################################################################################

lastimport:
  per_page: 500 # The number of tracks to request from the API at once. Default: 500.
  retry_limit: 3 # How many times should we re-send requests to Last.fm on failure? Default: 3.
lastfm:
  user: ansango
  api_key: # Your Last.fm API key.
types:
  play_count: int
  rating: float

lastgenre: # Fetches tags from Last.fm and assigns them as genres to your albums and items.
  auto: yes # Fetch genres automatically during import. Default: yes.
  canonical:
    ~/.config/beets/genres/genres-tree.yaml
    # Use a canonicalization tree. Setting this to yes will use a built-in tree.
  whitelist:
    ~/.config/beets/genres/genres.txt
    # The filename of a custom genre list, yes to use the internal whitelist, or no to consider all genres valid.
    # Default: yes.
  count: 3 # Number of genres to fetch. Default: 1
  fallback:
    "" # A string if to use a fallback genre when no genre is found.
    # You can use the empty string '' to reset the genre.
    # Default: None.
  separator: "/"
  force:
    no # By default, beets will always fetch new genres, even if the files already have one.
    # To instead leave genres in place in when they pass the #whitelist: ~/.config/beets/genres.txt,
    # set the force option to no.
  min_weight: 10 # Minimum popularity factor below which genres are discarded. Default: 10.
  prefer_specific: no # Sort genres by the most to least specific, rather than most to least popular. Default: no.
  source: artist # Which entity to look up in Last.fm. Can be either artist, album or track. Default: album.
  title_case: yes # Convert the new tags to TitleCase before saving. Default: yes.

###################################################################################################

# Pictures ########################################################################################

# In Roon, all the images embedded in the file tags, are stored next to the audio files or
# stored in a folder called artwork or scans next to the files are displayed.
# This includes all images that include cover, front or folder.

art_filename:
  cover # When importing album art, the name of the file (without extension) where the cover art image should be placed.
  # This is a template string, so you can use any of the syntax available to Path Formats.

copyartifacts:
  extensions: .jpg .pdf .png
  print_ignored: yes

fetchart:
  auto: yes # Enable automatic album art fetching during import.
  cautious: no # Pick only trusted album art by ignoring filenames that do not contain one of the keywords in "cover_names".
  enforce_ratio: yes # Only allow images with 1:1 aspect ratio
  minwidth: 640 # Only images with a width bigger or equal to minwidth are considered as valid album art candidates.
  maxwidth:
    3000 # A maximum image width to downscale fetched images if they are too big.
    # The height is recomputed so that the aspect ratio is preserved.
  sources: # An asterisk * expands to all available sources.
    - filesystem # No remote art sources are queried if local art is found in the filesystem.
    - coverart
    - albumart
    - lastfm # Set the lastfm_key configuration option to your API key, then add lastfm to the list of sources in your configuration.
    - bandcamp
    - fanarttv
  fanarttv_key: # API key to use for the fanart API.
  lastfm_key: # API key to use for the Last.fm API.
  store_source: yes # Store the art source (e.g. filesystem) in the beets database as art_source.

embedart:
  auto: yes # Enable automatic album art embedding.
  compare_threshold:
    50 # A threshold of 0 (the default) disables similarity checking and always embeds new images.
    # Recommended between 10 and 100.
    # The smaller the threshold number, the more similar the images must be.
  ifempty: yes # Avoid embedding album art for files that already have art embedded.
  maxwidth:
    0 # A maximum width to downscale images before embedding them (the original image file is not altered).
    # The resize operation reduces image width to at most maxwidth pixels.
    # The height is recomputed so that the aspect ratio is preserved. See also Image Resizing for further caveats about image resizing.
  remove_art_file:
    no # Automatically remove the album art file for the album after it has been embedded.
    # This option is best used alongside the FetchArt plugin to download art with the purpose
    # of directly embedding it into the file’s metadata without an “intermediate” album art file.
###################################################################################################

# Maintanance #####################################################################################

duplicates:
  album: no # List duplicate albums instead of tracks. Default: no.
  copy:
    none # A destination base directory into which to copy matched items.
    # Default: none (disabled).
  count:
    yes # Print a count of duplicate tracks or albums in the format
    # $albumartist - $album - $title: $count (for tracks)
    # or
    # $albumartist - $album: $count (for albums).
    # Default: no.
  delete: no # Removes matched items from the library and from the disk. Default: no
  format:
    format_item # A specific format with which to print every track or album.
    # This uses the same template syntax as beets’ path formats.
    # The usage is inspired by, and therefore similar to, the list command.
    # Default: format_item
  full: yes # List every track or album that has duplicates, not just the duplicates themselves. Default: no
  keys:
    [mb_trackid, mb_albumid]
    # Define in which track or album fields duplicates are to be searched.
    # By default, the plugin uses the musicbrainz track and album IDs for this purpose.
    # Using the keys option (as a YAML list in the configuration file,
    # or as space-delimited strings in the command-line),
    # you can extend this behavior to consider other attributes.
    # Default: [mb_trackid, mb_albumid]
  merge: no # Merge duplicate items by consolidating tracks and/or metadata where possible.
  move: none # A destination base directory into which it will move matched items. Default: none (disabled).
  path: no # Output the path instead of metadata when listing duplicates. Default: no.
  strict: no # Do not report duplicate matches if some of the attributes are not defined (ie. null or empty). Default: no
  #tag: no                   # A key=value pair.
  # The plugin will add a new key attribute with value value as a flexattr to the database for duplicate items. Default: no.
  tiebreak:
    {} # Dictionary of lists of attributes keyed by items or albums to use when choosing duplicates.
    # By default, the tie-breaking procedure favors the most complete metadata attribute set.
    # If you would like to consider the lower bitrates as duplicates, for example, set tiebreak: items: [bitrate].
    # Default: {}.
  check:
  import:
    yes # Add checksums for new files during the import process.
    # This also disables integrity checks on import and will not ask you to skip the import of corrupted files.
  write-check: yes # Verify checksums before writing files with beet write or beet modify.
  write-update: yes # Update checksums after writing files with beet write or beet modify.
  convert-update: no # Update the checksum if a file has been converted with the --keep-new flag.
  threads: 1 # Threads to compute checksums.
missing:
  #format: $albumartist - $album - $title
  # A specific format with which to print every track.
  # This uses the same template syntax as beets’ path formats.
  # The usage is inspired by, and therefore similar to, the list command.
  # Default: format_item.
  count:
    yes # Print a count of missing tracks per album, with format defaulting to $albumartist - $album: $missing.
    # Default: no.
  total:
    yes # Print a single count of missing tracks in all albums.
    # Default: no.
###################################################################################################

# UI ##############################################################################################

verbose: no

ui:
  color: yes
  colors:
    text_success: green
    text_warning: blue
    text_error: red
    text_highlight: blue
    text_highlight_minor: lightgray
    action_default: darkblue
    action: purple

hook:
  hooks:
    #############################################
    - event: album_imported
      command: echo "\"{album}\""
    - event: import
      command: echo "imported from {paths}"
    #############################################
    - event: art_set
      command: echo "Coverart saved"
    - event: import_begin
      command: echo "Roon import started..."
    - event: import_task_apply
      command: echo "Metadata applied"
    - event: item_copied
      command: echo "\"{item}\" copied from \"{source}\" to \"{destination}\""
    - event: item_moved
      command: echo "Moved \"{item}\""
    - event: write
      command: echo "Writing to {path}"
    - event: cli_exit
      command: echo "All tasks finished!"
###################################################################################################
